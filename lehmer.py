# -*- coding: utf-8 -*-
"""Lehmer.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Zie9wItbqku642BTtc2nAImCICxj6AxL
"""

import math

N = 100
nbin = 20
a = 0.05
x0 = 17

def Lehmer(seed, N): #xi+1 = N1*xi + N2 (mod N3), Î²i = xi/N3
  x_prev = seed
  N1 = 18987 
  N2  = 32725
  N3 = 2**31 - 1

  ans = []

  for i in range(N):
    cur = (N1*x_prev + N2) % N3
    ans.append(cur/N3)
    x_prev = cur
  
  return ans

def getBinN(num, nbin):
  return round(num * nbin - 1.5)

def checkUniformity(values):
  bins = [0] * nbin

  for x in values:
    bi = getBinN(x, nbin)
    bins[bi] += 1

  chi2 = 0
  expected = N/nbin
  for i in range(nbin):
    chi2 += ((expected - bins[i]) ** 2) / expected

  chi2_rd = chi2 / (nbin - 1)
  
  chi2_a = 0.48
  chi2_1_a = 1.71

  print(chi2_a, "<", chi2_rd, "<", chi2_1_a, " ?  ( a =", a, ")")

  if chi2_rd >= chi2_1_a:
    print("Uniformity hypothesis rejected")
  elif chi2 > chi2_a:
    print("Uniformity hypothesis can be accepted")
  else:
    print("Uniformity hypothesis can be accepted, but need to check for randomness")

def incSubstrCount(values, k):
  ans = 0
  maxlen = 1

  for i in range(1, len(values)):
    if values[i] > values[i - 1]:
      maxlen += 1
    else:
      maxlen = 1
    if maxlen >= k:
      ans += 1

  return ans

#N/k! should be >> 1
def checkRandomness():
  ntest = 10
  seed = x0
  kl = 2 
  kr = 11
  delta_cf = 2

  print()
  print("Testing for randomness...")
  for k in range(kl, kr):
    Ntotal = math.factorial(k) * 10
    M = 0
    for i in range(ntest):
      values = Lehmer(seed, Ntotal)
      M += incSubstrCount(values, k)
      seed = values[-1]

    Pobs = M/(Ntotal * ntest)
    Pth = 1 / math.factorial(k)

    print("numerator =", M, ", denominator =", Ntotal * ntest)

    delta = Pobs * math.sqrt(1/M + 1/(Ntotal * ntest))

    if Pobs - delta_cf * delta < Pth and Pth < Pobs + delta_cf * delta:
      print("k =", k, ": OK")
    else:
      print("k =", k, ": Failed")
    

values = Lehmer(x0, N)
checkUniformity(values)
checkRandomness()

""" $x_{i + 1} = (18987x{i} + 32725) mod (2^{31} - 1)\\x_0 = 17$


"""

